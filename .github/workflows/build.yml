name: Build and Deploy

on:
  push:
    tags:
      - "*"

jobs:

  build:
    name: Build and Deploy RPM
    runs-on: ubuntu-latest
    env:
      APP: discord-servertool
    steps:

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Check out
        uses: actions/checkout@v1

      - name: Get latest tag
        id: tag
        run: echo ::set-output name=VERSION::$(git describe --tags --abbrev=0)

      - name: Build binary
        run: |
          export PATH=$(go env GOPATH)/bin:$PATH
          make build

      - name: Create config.json
        run: echo '${{ secrets.CONFIG }}' | jq . > config.json

      - name: Create credential.json
        run: echo '${{ secrets.CREDENTIAL }}' | jq . > credential.json

      - name: Archive source
        run: |
          mkdir -p ${{ env.APP }}-${{ steps.tag.outputs.VERSION }} SOURCES
          cp ${{ env.APP }} \
            config.json \
            credential.json \
            systemd.service \
            ${{ env.APP }}-${{ steps.tag.outputs.VERSION }}/
          tar czf \
            SOURCES/${{ env.APP }}-${{ steps.tag.outputs.VERSION }}.tar.gz \
            ${{ env.APP }}-${{ steps.tag.outputs.VERSION }}

      - name: Build RPM
        uses: biohuns/rpmbuild-centos8-action@v1.0.0
        env:
          VERSION: ${{ steps.tag.outputs.VERSION }}
          RELEASE: ${{ github.run_number }}

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2.0.1
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: ${{ secrets.SSH_CONFIG }}

      - name: Deploy RPM
        env:
          RPM: ${{ env.APP }}-${{ steps.tag.outputs.VERSION }}-${{ github.run_number }}.el8.x86_64.rpm
        run: |
          scp ./RPMS/x86_64/$RPM remote:/var/tmp/$RPM
          ssh remote "sudo yum install -y /var/tmp/$RPM"
